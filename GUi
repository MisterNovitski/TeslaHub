-- ModernUI.lua
-- Cleaned, simplified, Dark/Light themes only
-- Author: Modernized by ChatGPT

local ModernUI = {}
ModernUI.__index = ModernUI

-- âœ… Ð”Ð²Ðµ Ñ‚ÐµÐ¼Ñ‹: Dark Ð¸ Light
ModernUI.Themes = {
    Dark = {
        Primary = Color3.fromRGB(0, 120, 215),
        Secondary = Color3.fromRGB(40, 40, 40),
        Background = Color3.fromRGB(25, 25, 25),
        Text = Color3.fromRGB(255, 255, 255),
        Border = Color3.fromRGB(60, 60, 60),
        Hover = Color3.fromRGB(55, 55, 55),
        Accent = Color3.fromRGB(0, 120, 215)
    },
    Light = {
        Primary = Color3.fromRGB(0, 120, 215),
        Secondary = Color3.fromRGB(240, 240, 240),
        Background = Color3.fromRGB(255, 255, 255),
        Text = Color3.fromRGB(0, 0, 0),
        Border = Color3.fromRGB(200, 200, 200),
        Hover = Color3.fromRGB(225, 225, 225),
        Accent = Color3.fromRGB(0, 120, 215)
    }
}

-- ðŸªŸ Ð¡Ð¾Ð·Ð´Ð°Ð½Ð¸Ðµ Ð¾ÐºÐ½Ð°
function ModernUI:CreateWindow(options)
    local window = setmetatable({}, ModernUI)
    window.Title = options.Title or "Modern UI"
    window.Size = options.Size or UDim2.new(0, 500, 0, 400)
    window.Theme = options.Theme or "Dark"
    window.Transparency = options.Transparency or 0
    window.Options = {}

    -- Main ScreenGui
    local screenGui = Instance.new("ScreenGui")
    screenGui.Name = "ModernUI"
    screenGui.Parent = game.Players.LocalPlayer:WaitForChild("PlayerGui")

    local mainFrame = Instance.new("Frame")
    mainFrame.Size = window.Size
    mainFrame.Position = UDim2.new(0.5, -window.Size.X.Offset / 2, 0.5, -window.Size.Y.Offset / 2)
    mainFrame.BackgroundColor3 = ModernUI.Themes[window.Theme].Background
    mainFrame.BorderSizePixel = 0
    mainFrame.Parent = screenGui

    local corner = Instance.new("UICorner")
    corner.CornerRadius = UDim.new(0, 8)
    corner.Parent = mainFrame

    local titleBar = Instance.new("TextLabel")
    titleBar.Size = UDim2.new(1, 0, 0, 30)
    titleBar.BackgroundColor3 = ModernUI.Themes[window.Theme].Secondary
    titleBar.Text = window.Title
    titleBar.TextColor3 = ModernUI.Themes[window.Theme].Text
    titleBar.TextSize = 16
    titleBar.Font = Enum.Font.GothamBold
    titleBar.Parent = mainFrame

    window.MainFrame = mainFrame
    window.ScreenGui = screenGui
    window.Tabs = {}

    return window
end

-- ðŸ§­ Ð”Ð¾Ð±Ð°Ð²Ð»ÐµÐ½Ð¸Ðµ Ð²ÐºÐ»Ð°Ð´ÐºÐ¸
function ModernUI:CreateTab(name)
    local tab = {}
    tab.Name = name
    tab.Elements = {}

    local content = Instance.new("Frame")
    content.Size = UDim2.new(1, -20, 1, -40)
    content.Position = UDim2.new(0, 10, 0, 35)
    content.BackgroundTransparency = 1
    content.Parent = self.MainFrame

    tab.Content = content
    table.insert(self.Tabs, tab)
    return tab
end

-- ðŸ•¹ ÐŸÐµÑ€ÐµÐºÐ»ÑŽÑ‡Ð°Ñ‚ÐµÐ»ÑŒ (Toggle)
function ModernUI:AddToggle(options)
    local toggleName = options.Title or "Toggle"
    local toggle = Instance.new("Frame")
    toggle.Size = UDim2.new(1, 0, 0, 35)
    toggle.BackgroundColor3 = ModernUI.Themes[self.Theme].Secondary
    toggle.BackgroundTransparency = self.Transparency
    toggle.BorderSizePixel = 0
    toggle.Parent = self.Content

    local UICorner = Instance.new("UICorner")
    UICorner.CornerRadius = UDim.new(0, 4)
    UICorner.Parent = toggle

    local toggleContainer = Instance.new("Frame")
    toggleContainer.Size = UDim2.new(0, 46, 0, 22)
    toggleContainer.Position = UDim2.new(1, -60, 0.5, 0)
    toggleContainer.AnchorPoint = Vector2.new(0, 0.5)
    toggleContainer.BackgroundColor3 = ModernUI.Themes[self.Theme].Hover
    toggleContainer.BorderSizePixel = 0
    toggleContainer.Parent = toggle

    local UICornerContainer = Instance.new("UICorner")
    UICornerContainer.CornerRadius = UDim.new(1, 0)
    UICornerContainer.Parent = toggleContainer

    local toggleButton = Instance.new("Frame")
    toggleButton.Size = UDim2.new(0, 18, 0, 18)
    toggleButton.Position = UDim2.new(0, 3, 0.5, 0)
    toggleButton.AnchorPoint = Vector2.new(0, 0.5)
    toggleButton.BackgroundColor3 = Color3.fromRGB(255, 255, 255)
    toggleButton.BorderSizePixel = 0
    toggleButton.Parent = toggleContainer

    local UICornerToggle = Instance.new("UICorner")
    UICornerToggle.CornerRadius = UDim.new(1, 0)
    UICornerToggle.Parent = toggleButton

    local toggleLabel = Instance.new("TextLabel")
    toggleLabel.Size = UDim2.new(1, -70, 1, 0)
    toggleLabel.Position = UDim2.new(0, 10, 0, 0)
    toggleLabel.BackgroundTransparency = 1
    toggleLabel.Text = toggleName
    toggleLabel.TextColor3 = ModernUI.Themes[self.Theme].Text
    toggleLabel.TextSize = 14
    toggleLabel.Font = Enum.Font.Gotham
    toggleLabel.TextXAlignment = Enum.TextXAlignment.Left
    toggleLabel.Parent = toggle

    local state = options.Default or false

    local function updateToggleAppearance()
        if state then
            game:GetService("TweenService"):Create(toggleContainer, TweenInfo.new(0.2), {
                BackgroundColor3 = ModernUI.Themes[self.Theme].Primary
            }):Play()
            game:GetService("TweenService"):Create(toggleButton, TweenInfo.new(0.2), {
                Position = UDim2.new(1, -21, 0.5, 0)
            }):Play()
        else
            game:GetService("TweenService"):Create(toggleContainer, TweenInfo.new(0.2), {
                BackgroundColor3 = ModernUI.Themes[self.Theme].Hover
            }):Play()
            game:GetService("TweenService"):Create(toggleButton, TweenInfo.new(0.2), {
                Position = UDim2.new(0, 3, 0.5, 0)
            }):Play()
        end
    end

    updateToggleAppearance()

    local clickArea = Instance.new("TextButton")
    clickArea.Size = UDim2.new(1, 0, 1, 0)
    clickArea.BackgroundTransparency = 1
    clickArea.Text = ""
    clickArea.Parent = toggle

    local toggleObj = {
        Value = state,
        OnChanged = function(callback)
            clickArea.MouseButton1Click:Connect(function()
                state = not state
                updateToggleAppearance()
                if callback then
                    callback(state)
                end
            end)
        end,
        SetValue = function(newValue)
            state = newValue
            updateToggleAppearance()
        end
    }

    self.Options[toggleName] = toggleObj
    table.insert(self.Elements, toggle)
    return toggleObj
end

-- ðŸŽ¨ Ð¡ÐµÐ»ÐµÐºÑ‚Ð¾Ñ€ Ñ‚ÐµÐ¼
function ModernUI:AddThemeSelector()
    local selector = Instance.new("Frame")
    selector.Size = UDim2.new(1, 0, 0, 80)
    selector.BackgroundColor3 = ModernUI.Themes[self.Theme].Secondary
    selector.BackgroundTransparency = self.Transparency
    selector.BorderSizePixel = 0
    selector.Parent = self.Content

    local UICorner = Instance.new("UICorner")
    UICorner.CornerRadius = UDim.new(0, 4)
    UICorner.Parent = selector

    local title = Instance.new("TextLabel")
    title.Size = UDim2.new(1, -10, 0, 20)
    title.Position = UDim2.new(0, 10, 0, 5)
    title.BackgroundTransparency = 1
    title.Text = "Select Theme"
    title.TextColor3 = ModernUI.Themes[self.Theme].Text
    title.TextSize = 14
    title.Font = Enum.Font.GothamBold
    title.TextXAlignment = Enum.TextXAlignment.Left
    title.Parent = selector

    local container = Instance.new("Frame")
    container.Size = UDim2.new(1, -20, 0, 40)
    container.Position = UDim2.new(0, 10, 0, 30)
    container.BackgroundTransparency = 1
    container.Parent = selector

    local layout = Instance.new("UIListLayout")
    layout.FillDirection = Enum.FillDirection.Horizontal
    layout.Padding = UDim.new(0, 10)
    layout.Parent = container

    for _, themeName in ipairs({"Dark", "Light"}) do
        local btn = Instance.new("TextButton")
        btn.Size = UDim2.new(0, 100, 0, 30)
        btn.BackgroundColor3 = ModernUI.Themes[themeName].Primary
        btn.BackgroundTransparency = 0.2
        btn.BorderSizePixel = 0
        btn.Text = themeName
        btn.TextColor3 = ModernUI.Themes[themeName].Text
        btn.TextSize = 12
        btn.Font = Enum.Font.Gotham
        btn.Parent = container

        local corner = Instance.new("UICorner")
        corner.CornerRadius = UDim.new(0, 4)
        corner.Parent = btn

        btn.MouseButton1Click:Connect(function()
            self.Theme = themeName
            self.MainFrame.BackgroundColor3 = ModernUI.Themes[self.Theme].Background
            title.TextColor3 = ModernUI.Themes[self.Theme].Text
            btn.BackgroundTransparency = 0
        end)
    end

    return selector
end

return ModernUI
