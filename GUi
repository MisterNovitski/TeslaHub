-- ModernUI.lua
-- Robust GUI module: draggable window, tabs, AddToggle (fixed), theme selector, close button
-- Usage: local ModernUI = require(path_to_this_file); local Window = ModernUI:CreateWindow({...})

local ModernUI = {}
ModernUI.__index = ModernUI
ModernUI.Version = "1.1.0"

-- Themes: only Dark and Light
ModernUI.Themes = {
    Dark = {
        Primary = Color3.fromRGB(0, 120, 215),
        Secondary = Color3.fromRGB(40, 40, 40),
        Background = Color3.fromRGB(25, 25, 25),
        Text = Color3.fromRGB(255, 255, 255),
        Hover = Color3.fromRGB(55, 55, 55),
        Accent = Color3.fromRGB(0, 120, 215)
    },
    Light = {
        Primary = Color3.fromRGB(0, 120, 215),
        Secondary = Color3.fromRGB(240, 240, 240),
        Background = Color3.fromRGB(255, 255, 255),
        Text = Color3.fromRGB(0, 0, 0),
        Hover = Color3.fromRGB(225, 225, 225),
        Accent = Color3.fromRGB(0, 120, 215)
    }
}

-- Helper: safe insert (defensive)
local function safeInsert(tbl, val)
    if type(tbl) ~= "table" then return false end
    table.insert(tbl, val)
    return true
end

-- CreateWindow: returns a window object with methods AddTab, SelectTab, Notify, Destroy
function ModernUI:CreateWindow(options)
    options = options or {}
    local window = {}
    setmetatable(window, {__index = ModernUI})

    -- Window properties
    window.Title = options.Title or ("ModernUI " .. self.Version)
    window.Size = options.Size or UDim2.fromOffset(580, 460)
    window.Theme = options.Theme and ModernUI.Themes[options.Theme] and options.Theme or "Dark"
    window.Transparency = (options.Transparency ~= nil) and options.Transparency or 0
    window.Tabs = {}
    window.Options = {}

    -- Create ScreenGui
    local player = game:GetService("Players").LocalPlayer
    assert(player, "LocalPlayer not found. This module must run in a local script.")
    local playerGui = player:WaitForChild("PlayerGui")
    local screenGui = Instance.new("ScreenGui")
    screenGui.Name = "ModernUIGui"
    screenGui.Parent = playerGui
    screenGui.ResetOnSpawn = false

    -- MainFrame
    local mainFrame = Instance.new("Frame")
    mainFrame.Name = "MainFrame"
    mainFrame.Size = window.Size
    mainFrame.Position = UDim2.new(0.5, -window.Size.X.Offset/2, 0.5, -window.Size.Y.Offset/2)
    mainFrame.AnchorPoint = Vector2.new(0.5, 0.5)
    mainFrame.BackgroundColor3 = ModernUI.Themes[window.Theme].Background
    mainFrame.BackgroundTransparency = window.Transparency
    mainFrame.BorderSizePixel = 0
    mainFrame.Parent = screenGui

    local mainCorner = Instance.new("UICorner")
    mainCorner.CornerRadius = UDim.new(0, 8)
    mainCorner.Parent = mainFrame

    -- TitleBar (for drag + title + close)
    local titleBar = Instance.new("Frame")
    titleBar.Name = "TitleBar"
    titleBar.Size = UDim2.new(1, 0, 0, 40)
    titleBar.Position = UDim2.new(0, 0, 0, 0)
    titleBar.BackgroundColor3 = ModernUI.Themes[window.Theme].Secondary
    titleBar.BackgroundTransparency = window.Transparency
    titleBar.BorderSizePixel = 0
    titleBar.Parent = mainFrame

    local titleLabel = Instance.new("TextLabel")
    titleLabel.Name = "TitleLabel"
    titleLabel.Size = UDim2.new(1, -60, 1, 0)
    titleLabel.Position = UDim2.new(0, 10, 0, 0)
    titleLabel.BackgroundTransparency = 1
    titleLabel.Text = window.Title
    titleLabel.TextColor3 = ModernUI.Themes[window.Theme].Text
    titleLabel.Font = Enum.Font.GothamBold
    titleLabel.TextSize = 18
    titleLabel.TextXAlignment = Enum.TextXAlignment.Left
    titleLabel.Parent = titleBar

    -- Close button
    local closeButton = Instance.new("TextButton")
    closeButton.Name = "CloseButton"
    closeButton.Size = UDim2.new(0, 34, 0, 28)
    closeButton.Position = UDim2.new(1, -42, 0.5, 0)
    closeButton.AnchorPoint = Vector2.new(0, 0.5)
    closeButton.Text = "âœ•"
    closeButton.TextSize = 18
    closeButton.Font = Enum.Font.GothamBold
    closeButton.TextColor3 = ModernUI.Themes[window.Theme].Text
    closeButton.BackgroundColor3 = ModernUI.Themes[window.Theme].Primary
    closeButton.BorderSizePixel = 0
    closeButton.Parent = titleBar

    local closeCorner = Instance.new("UICorner")
    closeCorner.CornerRadius = UDim.new(0, 6)
    closeCorner.Parent = closeButton

    closeButton.MouseEnter:Connect(function()
        pcall(function()
            game:GetService("TweenService"):Create(closeButton, TweenInfo.new(0.12), {BackgroundColor3 = ModernUI.Themes[window.Theme].Accent}):Play()
        end)
    end)
    closeButton.MouseLeave:Connect(function()
        pcall(function()
            game:GetService("TweenService"):Create(closeButton, TweenInfo.new(0.12), {BackgroundColor3 = ModernUI.Themes[window.Theme].Primary}):Play()
        end)
    end)

    closeButton.MouseButton1Click:Connect(function()
        screenGui:Destroy()
    end)

    -- Tabs container (left column)
    local tabColumn = Instance.new("Frame")
    tabColumn.Name = "TabColumn"
    tabColumn.Size = UDim2.new(0, 160, 1, -40)
    tabColumn.Position = UDim2.new(0, 0, 0, 40)
    tabColumn.BackgroundColor3 = ModernUI.Themes[window.Theme].Secondary
    tabColumn.BackgroundTransparency = window.Transparency
    tabColumn.BorderSizePixel = 0
    tabColumn.Parent = mainFrame

    local tabCorner = Instance.new("UICorner")
    tabCorner.CornerRadius = UDim.new(0, 8)
    tabCorner.Parent = tabColumn

    -- Content container (right)
    local contentContainer = Instance.new("Frame")
    contentContainer.Name = "ContentContainer"
    contentContainer.Size = UDim2.new(1, -160, 1, -40)
    contentContainer.Position = UDim2.new(0, 160, 0, 40)
    contentContainer.BackgroundTransparency = 1
    contentContainer.Parent = mainFrame

    -- UIListLayout for tabs
    local tabsLayout = Instance.new("UIListLayout")
    tabsLayout.Padding = UDim.new(0, 6)
    tabsLayout.FillDirection = Enum.FillDirection.Vertical
    tabsLayout.HorizontalAlignment = Enum.HorizontalAlignment.Center
    tabsLayout.VerticalAlignment = Enum.VerticalAlignment.Top
    tabsLayout.Parent = tabColumn

    -- Dragging logic
    local dragging = false
    local dragStart = nil
    local startPos = nil
    titleBar.InputBegan:Connect(function(input)
        if input.UserInputType == Enum.UserInputType.MouseButton1 then
            dragging = true
            dragStart = input.Position
            startPos = mainFrame.Position
            input.Changed:Connect(function()
                if input.UserInputState == Enum.UserInputState.End then
                    dragging = false
                end
            end)
        end
    end)
    titleBar.InputChanged:Connect(function(input)
        if input.UserInputType == Enum.UserInputType.MouseMovement and dragging and dragStart and startPos then
            local delta = input.Position - dragStart
            mainFrame.Position = UDim2.new(startPos.X.Scale, startPos.X.Offset + delta.X, startPos.Y.Scale, startPos.Y.Offset + delta.Y)
        end
    end)

    -- Window object fields
    window.ScreenGui = screenGui
    window.MainFrame = mainFrame
    window.TitleBar = titleBar
    window.TabColumn = tabColumn
    window.ContentContainer = contentContainer
    window.ActiveTab = nil

    -- Internal: create a tab button + content frame
    function window:AddTab(opts)
        opts = opts or {}
        local tab = {}
        tab.Title = opts.Title or "Tab"
        tab.Elements = {}

        -- Button in the left column
        local btn = Instance.new("TextButton")
        btn.Name = "TabButton_" .. tab.Title
        btn.Size = UDim2.new(1, -12, 0, 36)
        btn.Position = UDim2.new(0, 6, 0, (#window.Tabs) * 42 + 6)
        btn.BackgroundColor3 = ModernUI.Themes[window.Theme].Secondary
        btn.BackgroundTransparency = window.Transparency
        btn.BorderSizePixel = 0
        btn.Text = tab.Title
        btn.TextColor3 = ModernUI.Themes[window.Theme].Text
        btn.Font = Enum.Font.Gotham
        btn.TextSize = 14
        btn.Parent = window.TabColumn

        local btnCorner = Instance.new("UICorner")
        btnCorner.CornerRadius = UDim.new(0, 6)
        btnCorner.Parent = btn

        -- Content frame for this tab
        local content = Instance.new("ScrollingFrame")
        content.Name = "Content_" .. tab.Title
        content.Size = UDim2.new(1, -20, 1, -20)
        content.Position = UDim2.new(0, 10, 0, 10)
        content.BackgroundTransparency = 1
        content.BorderSizePixel = 0
        content.CanvasSize = UDim2.new(0, 0, 1, 0)
        content.AutomaticCanvasSize = Enum.AutomaticSize.Y
        content.ScrollBarThickness = 6
        content.Visible = false
        content.Parent = window.ContentContainer

        local contentLayout = Instance.new("UIListLayout")
        contentLayout.Padding = UDim.new(0, 8)
        contentLayout.Parent = content

        tab.Button = btn
        tab.Content = content
        tab.ContentLayout = contentLayout

        -- Button interactions
        btn.MouseEnter:Connect(function()
            if window.ActiveTab ~= tab then
                pcall(function()
                    game:GetService("TweenService"):Create(btn, TweenInfo.new(0.12), {BackgroundColor3 = ModernUI.Themes[window.Theme].Hover}):Play()
                end)
            end
        end)
        btn.MouseLeave:Connect(function()
            if window.ActiveTab ~= tab then
                pcall(function()
                    game:GetService("TweenService"):Create(btn, TweenInfo.new(0.12), {BackgroundColor3 = ModernUI.Themes[window.Theme].Secondary}):Play()
                end)
            end
        end)

        btn.MouseButton1Click:Connect(function()
            window:SelectTab(tab)
        end)

        -- Tab methods: AddToggle, AddButton, AddLabel, AddThemeSelector
        function tab:AddToggle(opts)
            opts = opts or {}
            local title = opts.Title or "Toggle"
            local default = (opts.Default == true)

            local container = Instance.new("Frame")
            container.Size = UDim2.new(1, -20, 0, 36)
            container.BackgroundColor3 = ModernUI.Themes[window.Theme].Secondary
            container.BackgroundTransparency = window.Transparency
            container.BorderSizePixel = 0
            container.Parent = tab.Content

            local contCorner = Instance.new("UICorner")
            contCorner.CornerRadius = UDim.new(0, 6)
            contCorner.Parent = container

            local label = Instance.new("TextLabel")
            label.Size = UDim2.new(1, -90, 1, 0)
            label.Position = UDim2.new(0, 10, 0, 0)
            label.BackgroundTransparency = 1
            label.Text = title
            label.TextColor3 = ModernUI.Themes[window.Theme].Text
            label.Font = Enum.Font.Gotham
            label.TextSize = 14
            label.TextXAlignment = Enum.TextXAlignment.Left
            label.Parent = container

            -- Toggle background (rounded)
            local toggleBack = Instance.new("Frame")
            toggleBack.Size = UDim2.new(0, 44, 0, 24)
            toggleBack.Position = UDim2.new(1, -60, 0.5, 0)
            toggleBack.AnchorPoint = Vector2.new(0, 0.5)
            toggleBack.BackgroundColor3 = (default and ModernUI.Themes[window.Theme].Primary) or ModernUI.Themes[window.Theme].Hover
            toggleBack.BorderSizePixel = 0
            toggleBack.Parent = container

            local backCorner = Instance.new("UICorner")
            backCorner.CornerRadius = UDim.new(1, 0)
            backCorner.Parent = toggleBack

            -- Circle
            local circle = Instance.new("Frame")
            circle.Size = UDim2.new(0, 16, 0, 16)
            circle.Position = UDim2.new(0, 4, 0.5, 0)
            circle.AnchorPoint = Vector2.new(0, 0.5)
            circle.BackgroundColor3 = Color3.fromRGB(255,255,255)
            circle.BorderSizePixel = 0
            circle.Parent = toggleBack

            local circleCorner = Instance.new("UICorner")
            circleCorner.CornerRadius = UDim.new(1, 0)
            circleCorner.Parent = circle

            -- Click area
            local clickArea = Instance.new("TextButton")
            clickArea.BackgroundTransparency = 1
            clickArea.Size = UDim2.new(1, 0, 1, 0)
            clickArea.Text = ""
            clickArea.Parent = container

            -- state and update function
            local state = default
            local ts = game:GetService("TweenService")
            local function updateVisuals()
                if state then
                    ts:Create(toggleBack, TweenInfo.new(0.16), {BackgroundColor3 = ModernUI.Themes[window.Theme].Primary}):Play()
                    ts:Create(circle, TweenInfo.new(0.16), {Position = UDim2.new(1, -20, 0.5, 0)}):Play()
                else
                    ts:Create(toggleBack, TweenInfo.new(0.16), {BackgroundColor3 = ModernUI.Themes[window.Theme].Hover}):Play()
                    ts:Create(circle, TweenInfo.new(0.16), {Position = UDim2.new(0, 4, 0.5, 0)}):Play()
                end
            end

            updateVisuals()

            clickArea.MouseButton1Click:Connect(function()
                state = not state
                updateVisuals()
                if type(opts.Callback) == "function" then
                    pcall(opts.Callback, state)
                end
            end)

            local toggleObj = {
                Value = state,
                SetValue = function(newVal)
                    state = not not newVal
                    updateVisuals()
                end,
                OnChanged = function(cb)
                    if type(cb) == "function" then
                        clickArea.MouseButton1Click:Connect(function()
                            cb(state)
                        end)
                    end
                end
            }

            -- Save in tab.Elements and window.Options
            safeInsert(tab.Elements, toggleObj)
            window.Options[title] = toggleObj

            return toggleObj
        end

        function tab:AddButton(opts)
            opts = opts or {}
            local title = opts.Title or "Button"
            local desc = opts.Description

            local btnFrame = Instance.new("TextButton")
            btnFrame.Size = UDim2.new(1, -20, 0, 36)
            btnFrame.BackgroundColor3 = ModernUI.Themes[window.Theme].Secondary
            btnFrame.BackgroundTransparency = window.Transparency
            btnFrame.BorderSizePixel = 0
            btnFrame.Text = title
            btnFrame.TextColor3 = ModernUI.Themes[window.Theme].Text
            btnFrame.Font = Enum.Font.Gotham
            btnFrame.TextSize = 14
            btnFrame.Parent = tab.Content

            local btnCorner = Instance.new("UICorner")
            btnCorner.CornerRadius = UDim.new(0, 6)
            btnCorner.Parent = btnFrame

            if desc then
                local label = Instance.new("TextLabel")
                label.Size = UDim2.new(1, -10, 0, 14)
                label.Position = UDim2.new(0, 10, 1, -14)
                label.BackgroundTransparency = 1
                label.Text = desc
                label.TextColor3 = ModernUI.Themes[window.Theme].Text
                label.TextTransparency = 0.6
                label.Font = Enum.Font.Gotham
                label.TextSize = 12
                label.Parent = btnFrame
            end

            if type(opts.Callback) == "function" then
                btnFrame.MouseButton1Click:Connect(function()
                    pcall(opts.Callback)
                end)
            end

            safeInsert(tab.Elements, btnFrame)
            return btnFrame
        end

        function tab:AddLabel(opts)
            opts = opts or {}
            local lbl = Instance.new("TextLabel")
            lbl.Size = UDim2.new(1, -20, 0, 20)
            lbl.BackgroundTransparency = 1
            lbl.Text = opts.Title or "Label"
            lbl.TextColor3 = ModernUI.Themes[window.Theme].Text
            lbl.Font = Enum.Font.Gotham
            lbl.TextSize = 14
            lbl.TextXAlignment = Enum.TextXAlignment.Left
            lbl.Parent = tab.Content

            if opts.Content then
                local content = Instance.new("TextLabel")
                content.Size = UDim2.new(1, -20, 0, 15)
                content.Position = UDim2.new(0, 0, 1, 0)
                content.BackgroundTransparency = 1
                content.Text = opts.Content
                content.TextColor3 = ModernUI.Themes[window.Theme].Text
                content.TextTransparency = 0.6
                content.Font = Enum.Font.Gotham
                content.TextSize = 12
                content.Parent = lbl
            end

            safeInsert(tab.Elements, lbl)
            return lbl
        end

        function tab:AddThemeSelector()
            -- Container frame
            local selFrame = Instance.new("Frame")
            selFrame.Size = UDim2.new(1, -20, 0, 80)
            selFrame.BackgroundColor3 = ModernUI.Themes[window.Theme].Secondary
            selFrame.BackgroundTransparency = window.Transparency
            selFrame.BorderSizePixel = 0
            selFrame.Parent = tab.Content

            local scorner = Instance.new("UICorner")
            scorner.CornerRadius = UDim.new(0, 6)
            scorner.Parent = selFrame

            local title = Instance.new("TextLabel")
            title.Size = UDim2.new(1, -10, 0, 20)
            title.Position = UDim2.new(0, 10, 0, 6)
            title.BackgroundTransparency = 1
            title.Text = "Select Theme"
            title.TextColor3 = ModernUI.Themes[window.Theme].Text
            title.Font = Enum.Font.GothamBold
            title.TextSize = 14
            title.TextXAlignment = Enum.TextXAlignment.Left
            title.Parent = selFrame

            local buttonsFrame = Instance.new("Frame")
            buttonsFrame.Size = UDim2.new(1, -20, 0, 40)
            buttonsFrame.Position = UDim2.new(0, 10, 0, 34)
            buttonsFrame.BackgroundTransparency = 1
            buttonsFrame.Parent = selFrame

            local list = Instance.new("UIListLayout")
            list.FillDirection = Enum.FillDirection.Horizontal
            list.HorizontalAlignment = Enum.HorizontalAlignment.Left
            list.Padding = UDim.new(0, 8)
            list.Parent = buttonsFrame

            for _, name in ipairs({"Dark", "Light"}) do
                local tbtn = Instance.new("TextButton")
                tbtn.Size = UDim2.new(0, 100, 0, 30)
                tbtn.BackgroundColor3 = ModernUI.Themes[name].Primary
                tbtn.Text = name
                tbtn.TextColor3 = ModernUI.Themes[name].Text
                tbtn.Font = Enum.Font.Gotham
                tbtn.TextSize = 13
                tbtn.Parent = buttonsFrame

                local tcorner = Instance.new("UICorner")
                tcorner.CornerRadius = UDim.new(0, 6)
                tcorner.Parent = tbtn

                tbtn.MouseButton1Click:Connect(function()
                    -- apply theme to whole window
                    if ModernUI.Themes[name] then
                        window.Theme = name
                        -- update all main visuals
                        mainFrame.BackgroundColor3 = ModernUI.Themes[name].Background
                        titleBar.BackgroundColor3 = ModernUI.Themes[name].Secondary
                        tabColumn.BackgroundColor3 = ModernUI.Themes[name].Secondary
                        titleLabel.TextColor3 = ModernUI.Themes[name].Text
                        closeButton.TextColor3 = ModernUI.Themes[name].Text
                        closeButton.BackgroundColor3 = ModernUI.Themes[name].Primary

                        -- Update existing tabs and their child visuals
                        for _, t in ipairs(window.Tabs) do
                            -- update tab buttons
                            if t.Button and t.Button:IsA("TextButton") then
                                t.Button.BackgroundColor3 = ModernUI.Themes[name].Secondary
                                t.Button.TextColor3 = ModernUI.Themes[name].Text
                            end
                            -- update content children (best-effort)
                            for _, child in ipairs(t.Content:GetChildren()) do
                                if child:IsA("Frame") or child:IsA("TextButton") or child:IsA("TextLabel") or child:IsA("ScrollingFrame") then
                                    -- general text color updates
                                    if child:IsA("TextLabel") or child:IsA("TextButton") then
                                        child.TextColor3 = ModernUI.Themes[name].Text
                                    end
                                    -- background updates for containers
                                    if child:IsA("Frame") and child.Name ~= "Content_"..t.Title then
                                        child.BackgroundColor3 = ModernUI.Themes[name].Secondary
                                    end
                                end
                            end
                        end
                    end
                end)
            end

            safeInsert(tab.Elements, selFrame)
            return selFrame
        end

        -- store tab and return it
        safeInsert(window.Tabs, tab)
        -- automatically select first tab
        if #window.Tabs == 1 then
            window:SelectTab(tab)
        end

        return tab
    end

    -- SelectTab: shows content and updates button colors
    function window:SelectTab(tab)
        assert(tab and tab.Content and tab.Button, "Invalid tab passed to SelectTab")
        if self.ActiveTab and self.ActiveTab ~= tab then
            -- hide previous
            self.ActiveTab.Content.Visible = false
            pcall(function()
                game:GetService("TweenService"):Create(self.ActiveTab.Button, TweenInfo.new(0.12), {BackgroundColor3 = ModernUI.Themes[self.Theme].Secondary}):Play()
            end)
        end
        -- show selected
        tab.Content.Visible = true
        pcall(function()
            game:GetService("TweenService"):Create(tab.Button, TweenInfo.new(0.12), {BackgroundColor3 = ModernUI.Themes[self.Theme].Primary}):Play()
        end)
        self.ActiveTab = tab
    end

    -- Notify: small popup top-right
    function window:Notify(opts)
        opts = opts or {}
        local title = opts.Title or "Notification"
        local content = opts.Content or ""
        local duration = opts.Duration or 3

        local notify = Instance.new("Frame")
        notify.Size = UDim2.new(0, 300, 0, 70)
        notify.Position = UDim2.new(1, -320, 0, 40)
        notify.AnchorPoint = Vector2.new(0, 0)
        notify.BackgroundColor3 = ModernUI.Themes[window.Theme].Secondary
        notify.BackgroundTransparency = window.Transparency
        notify.BorderSizePixel = 0
        notify.Parent = screenGui

        local ncorner = Instance.new("UICorner")
        ncorner.CornerRadius = UDim.new(0, 8)
        ncorner.Parent = notify

        local tlabel = Instance.new("TextLabel")
        tlabel.Size = UDim2.new(1, -20, 0, 24)
        tlabel.Position = UDim2.new(0, 10, 0, 8)
        tlabel.BackgroundTransparency = 1
        tlabel.Text = title
        tlabel.TextColor3 = ModernUI.Themes[window.Theme].Text
        tlabel.Font = Enum.Font.GothamBold
        tlabel.TextSize = 14
        tlabel.TextXAlignment = Enum.TextXAlignment.Left
        tlabel.Parent = notify

        local clabel = Instance.new("TextLabel")
        clabel.Size = UDim2.new(1, -20, 0, 36)
        clabel.Position = UDim2.new(0, 10, 0, 30)
        clabel.BackgroundTransparency = 1
        clabel.Text = content
        clabel.TextColor3 = ModernUI.Themes[window.Theme].Text
        clabel.TextTransparency = 0
        clabel.Font = Enum.Font.Gotham
        clabel.TextSize = 13
        clabel.TextXAlignment = Enum.TextXAlignment.Left
        clabel.TextYAlignment = Enum.TextYAlignment.Top
        clabel.Parent = notify

        spawn(function()
            task.wait(duration)
            pcall(function()
                game:GetService("TweenService"):Create(notify, TweenInfo.new(0.18), {Position = UDim2.new(1, -320, 0, -120)}):Play()
                task.wait(0.18)
                notify:Destroy()
            end)
        end)
    end

    -- Return window (API)
    return window
end

return ModernUI
