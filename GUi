-- TeslaHub Modern GUI
-- Clean, draggable, with theme selector and close button

local ModernUI = {}
ModernUI.__index = ModernUI

ModernUI.Themes = {
    Dark = {
        Primary = Color3.fromRGB(0, 120, 215),
        Secondary = Color3.fromRGB(40, 40, 40),
        Background = Color3.fromRGB(25, 25, 25),
        Text = Color3.fromRGB(255, 255, 255),
        Hover = Color3.fromRGB(55, 55, 55),
        Accent = Color3.fromRGB(0, 120, 215)
    },
    Light = {
        Primary = Color3.fromRGB(0, 120, 215),
        Secondary = Color3.fromRGB(240, 240, 240),
        Background = Color3.fromRGB(255, 255, 255),
        Text = Color3.fromRGB(0, 0, 0),
        Hover = Color3.fromRGB(225, 225, 225),
        Accent = Color3.fromRGB(0, 120, 215)
    }
}

-- ü™ü –°–æ–∑–¥–∞–Ω–∏–µ –æ–∫–Ω–∞
function ModernUI:CreateWindow(options)
    local self = setmetatable({}, ModernUI)
    self.Title = options.Title or "Tesla Hub"
    self.Size = options.Size or UDim2.new(0, 500, 0, 400)
    self.Theme = options.Theme or "Dark"
    self.Transparency = options.Transparency or 0
    self.Options = {}

    local player = game.Players.LocalPlayer
    local gui = Instance.new("ScreenGui")
    gui.Name = "TeslaHubUI"
    gui.Parent = player:WaitForChild("PlayerGui")

    local main = Instance.new("Frame")
    main.Size = self.Size
    main.Position = UDim2.new(0.5, -self.Size.X.Offset / 2, 0.5, -self.Size.Y.Offset / 2)
    main.BackgroundColor3 = ModernUI.Themes[self.Theme].Background
    main.BorderSizePixel = 0
    main.Parent = gui

    local corner = Instance.new("UICorner")
    corner.CornerRadius = UDim.new(0, 8)
    corner.Parent = main

    -- üß≠ –ó–∞–≥–æ–ª–æ–≤–æ–∫
    local titleBar = Instance.new("Frame")
    titleBar.Size = UDim2.new(1, 0, 0, 35)
    titleBar.BackgroundColor3 = ModernUI.Themes[self.Theme].Secondary
    titleBar.BorderSizePixel = 0
    titleBar.Parent = main

    local titleLabel = Instance.new("TextLabel")
    titleLabel.Size = UDim2.new(1, -40, 1, 0)
    titleLabel.Position = UDim2.new(0, 10, 0, 0)
    titleLabel.BackgroundTransparency = 1
    titleLabel.Text = self.Title
    titleLabel.TextColor3 = ModernUI.Themes[self.Theme].Text
    titleLabel.Font = Enum.Font.GothamBold
    titleLabel.TextSize = 16
    titleLabel.TextXAlignment = Enum.TextXAlignment.Left
    titleLabel.Parent = titleBar

    -- ‚ùå –ö–Ω–æ–ø–∫–∞ –∑–∞–∫—Ä—ã—Ç–∏—è
    local closeButton = Instance.new("TextButton")
    closeButton.Size = UDim2.new(0, 30, 0, 30)
    closeButton.Position = UDim2.new(1, -35, 0.5, 0)
    closeButton.AnchorPoint = Vector2.new(0, 0.5)
    closeButton.BackgroundColor3 = ModernUI.Themes[self.Theme].Primary
    closeButton.Text = "X"
    closeButton.TextColor3 = Color3.fromRGB(255, 255, 255)
    closeButton.Font = Enum.Font.GothamBold
    closeButton.TextSize = 14
    closeButton.Parent = titleBar

    local closeCorner = Instance.new("UICorner")
    closeCorner.CornerRadius = UDim.new(1, 0)
    closeCorner.Parent = closeButton

    closeButton.MouseButton1Click:Connect(function()
        gui:Destroy()
    end)

    -- üì¶ –°–æ–¥–µ—Ä–∂–∏–º–æ–µ
    local content = Instance.new("Frame")
    content.Size = UDim2.new(1, -20, 1, -50)
    content.Position = UDim2.new(0, 10, 0, 45)
    content.BackgroundTransparency = 1
    content.Parent = main
    self.Content = content

    -- üñ± –ü–µ—Ä–µ—Ç–∞—Å–∫–∏–≤–∞–Ω–∏–µ GUI
    local dragging = false
    local dragStart, startPos

    titleBar.InputBegan:Connect(function(input)
        if input.UserInputType == Enum.UserInputType.MouseButton1 then
            dragging = true
            dragStart = input.Position
            startPos = main.Position
        end
    end)

    titleBar.InputChanged:Connect(function(input)
        if input.UserInputType == Enum.UserInputType.MouseMovement then
            if dragging then
                local delta = input.Position - dragStart
                main.Position = UDim2.new(startPos.X.Scale, startPos.X.Offset + delta.X, startPos.Y.Scale, startPos.Y.Offset + delta.Y)
            end
        end
    end)

    titleBar.InputEnded:Connect(function(input)
        if input.UserInputType == Enum.UserInputType.MouseButton1 then
            dragging = false
        end
    end)

    self.MainFrame = main
    self.GUI = gui
    return self
end

-- üïπ Toggle
function ModernUI:AddToggle(options)
    local name = options.Title or "Toggle"
    local callback = options.Callback or function() end

    local toggleFrame = Instance.new("Frame")
    toggleFrame.Size = UDim2.new(1, 0, 0, 35)
    toggleFrame.BackgroundColor3 = ModernUI.Themes[self.Theme].Secondary
    toggleFrame.Parent = self.Content

    local corner = Instance.new("UICorner")
    corner.CornerRadius = UDim.new(0, 4)
    corner.Parent = toggleFrame

    local label = Instance.new("TextLabel")
    label.Size = UDim2.new(1, -70, 1, 0)
    label.Position = UDim2.new(0, 10, 0, 0)
    label.BackgroundTransparency = 1
    label.Text = name
    label.TextColor3 = ModernUI.Themes[self.Theme].Text
    label.TextSize = 14
    label.Font = Enum.Font.Gotham
    label.TextXAlignment = Enum.TextXAlignment.Left
    label.Parent = toggleFrame

    local toggleBtn = Instance.new("TextButton")
    toggleBtn.Size = UDim2.new(0, 40, 0, 20)
    toggleBtn.Position = UDim2.new(1, -50, 0.5, 0)
    toggleBtn.AnchorPoint = Vector2.new(0, 0.5)
    toggleBtn.BackgroundColor3 = ModernUI.Themes[self.Theme].Hover
    toggleBtn.BorderSizePixel = 0
    toggleBtn.Text = ""
    toggleBtn.Parent = toggleFrame

    local round = Instance.new("UICorner")
    round.CornerRadius = UDim.new(1, 0)
    round.Parent = toggleBtn

    local circle = Instance.new("Frame")
    circle.Size = UDim2.new(0, 16, 0, 16)
    circle.Position = UDim2.new(0, 2, 0.5, 0)
    circle.AnchorPoint = Vector2.new(0, 0.5)
    circle.BackgroundColor3 = Color3.fromRGB(255, 255, 255)
    circle.Parent = toggleBtn

    local ccorner = Instance.new("UICorner")
    ccorner.CornerRadius = UDim.new(1, 0)
    ccorner.Parent = circle

    local state = false
    local tween = game:GetService("TweenService")

    local function update()
        if state then
            tween:Create(toggleBtn, TweenInfo.new(0.2), {BackgroundColor3 = ModernUI.Themes[self.Theme].Primary}):Play()
            tween:Create(circle, TweenInfo.new(0.2), {Position = UDim2.new(1, -18, 0.5, 0)}):Play()
        else
            tween:Create(toggleBtn, TweenInfo.new(0.2), {BackgroundColor3 = ModernUI.Themes[self.Theme].Hover}):Play()
            tween:Create(circle, TweenInfo.new(0.2), {Position = UDim2.new(0, 2, 0.5, 0)}):Play()
        end
    end

    toggleBtn.MouseButton1Click:Connect(function()
        state = not state
        update()
        callback(state)
    end)

    update()
end

-- üé® –í–∫–ª–∞–¥–∫–∞ –≤—ã–±–æ—Ä–∞ —Ç–µ–º—ã
function ModernUI:AddThemeSelector()
    local label = Instance.new("TextLabel")
    label.Size = UDim2.new(1, 0, 0, 30)
    label.Text = "Select Theme:"
    label.TextColor3 = ModernUI.Themes[self.Theme].Text
    label.Font = Enum.Font.GothamBold
    label.TextSize = 14
    label.BackgroundTransparency = 1
    label.Parent = self.Content

    local layout = Instance.new("UIListLayout")
    layout.Padding = UDim.new(0, 5)
    layout.Parent = self.Content

    for _, themeName in pairs({"Dark", "Light"}) do
        local btn = Instance.new("TextButton")
        btn.Size = UDim2.new(0, 120, 0, 30)
        btn.BackgroundColor3 = ModernUI.Themes[themeName].Primary
        btn.Text = themeName
        btn.TextColor3 = ModernUI.Themes[themeName].Text
        btn.Font = Enum.Font.Gotham
        btn.TextSize = 12
        btn.Parent = self.Content

        local corner = Instance.new("UICorner")
        corner.CornerRadius = UDim.new(0, 6)
        corner.Parent = btn

        btn.MouseButton1Click:Connect(function()
            self.Theme = themeName
            self.MainFrame.BackgroundColor3 = ModernUI.Themes[self.Theme].Background
        end)
    end
end

return ModernUI
